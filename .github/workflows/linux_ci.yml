name: Shion Linux Build
on:
  workflow_call:
    inputs:
      arch:
        type: string
        default: amd64
      os:
        type: string
        default: ubuntu-24.04
      cxx:
        type: string
        default: g++
      cc:
        type: string
        default: gcc
      cxx-ver:
        type: number
        default: 14
      build:
        type: string
        default: Debug
      cmake-flags:
        type: string
        default: ''
      pack:
        type: boolean
        default: false
    outputs:
      artifact:
        description: "Compiled binaries"
        value: ${{ jobs.ci.outputs.artifact }}
  workflow_dispatch:
    inputs:
      arch:
        type: string
        default: amd64
      os:
        type: string
        default: ubuntu-24.04
      cxx:
        type: string
        default: g++
      cc:
        type: string
        default: gcc
      cxx-ver:
        type: number
        default: 14
      build:
        type: choice
        default: Debug
        options:
          - Debug
          - Release
          - RelWithDebInfo
      cmake-flags:
        type: string
        default: ''
      pack:
        type: boolean
        default: false

jobs:
  ci:
    name: ${{ inputs.cxx }}-${{ inputs.cxx-ver }} ${{ inputs.build }}
    outputs:
      artifact: ${{ steps.upload.outputs.artifact-id }}
    runs-on: ${{ inputs.os }}
    env:
      CXX: ${{ inputs.cxx }}-${{ inputs.cxx-ver }}
      CC: ${{ inputs.cc }}-${{ inputs.cxx-ver }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@v2.10.2
        with:
          egress-policy: audit

      - name: Add LLVM key
        if: ${{ inputs.cc == 'clang' }}
        run: wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -

      - name: Add LLVM repository
        if: ${{ inputs.cc == 'clang' }}
        run: |
          osname=`cat /etc/os-release | grep -e "^VERSION_CODENAME" | cut -d= -f2`
          wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
          sudo apt-add-repository -y "deb http://apt.llvm.org/$osname/ llvm-toolchain-$osname-${{ inputs.cxx-ver }} main"

      - name: Install apt packages
        run: |
            sudo sed -i 's/azure\.//' /etc/apt/sources.list &&
            sudo apt update &&
            sudo apt-get install -y ninja-build ${{ inputs.cxx }}-${{ inputs.cxx-ver }}  ${{ inputs.cc }}-${{ inputs.cxx-ver }} pkg-config python3

      - name: Install LLVM
        if: ${{ inputs.cc == 'clang' }}
        run: |
            sudo apt-get install -y libc++-${{ inputs.cxx-ver }}-dev libc++abi-${{ inputs.cxx-ver }}-dev clang-tools-${{ inputs.cxx-ver }} \

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          submodules: recursive
          persist-credentials: false

      - name: Generate CMake
        run: cmake -G Ninja -B build -DCMAKE_BUILD_TYPE=${{ inputs.build }} ${{ inputs.cmake-flags }}

      - name: Build Project
        run: cmake --build build --parallel 4
      
      - name: Package Project
        if: ${{ inputs.pack == true }}
        run: cmake --install build --prefix=build/pack

      - name: Upload Binaries
        id: upload
        if: ${{ inputs.pack == true }}
        uses: actions/upload-artifact@0b2256b8c012f0828dc542b3febcab082c67f72b # v4.3.4
        with:
          name: "shion ${{ github.sha }} ${{ inputs.os }} ${{ inputs.arch }} ${{ inputs.cxx }}-${{ inputs.cxx-ver }} ${{ inputs.build }}"
          path: '${{github.workspace}}/build/pack/'
          retention-days: 30
